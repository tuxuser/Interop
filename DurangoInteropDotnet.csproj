<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0-windows</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>disable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <!-- List of files to concat -->
  <ItemGroup>
    <ConcatFiles Include="src\GlobalUsings.cs;src\Interop.cs;src\AppPackageMountManager.cs;src\FirewallManager.cs;src\LicenseManager.cs;src\Shellcode.cs;src\UserManager.cs;src\WinUserManager.cs;src\XCrd.cs">
      <Destination>aio.cs</Destination>
    </ConcatFiles>
    <ConcatFiles Include="src\GlobalUsings.cs;src\XCrd.cs;src\Interop.cs">
      <Destination>xcrd.cs</Destination>
    </ConcatFiles>
    <ConcatFiles Include="src\GlobalUsings.cs;src\LicenseManager.cs;src\Interop.cs">
      <Destination>license.cs</Destination>
    </ConcatFiles>
    <ConcatFiles Include="src\GlobalUsings.cs;src\UserManager.cs;src\Interop.cs">
      <Destination>usermanager.cs</Destination>
    </ConcatFiles>
    <ConcatFiles Include="src\GlobalUsings.cs;src\AppPackageMountManager.cs;src\Interop.cs">
      <Destination>packagemount.cs</Destination>
    </ConcatFiles>
    <ConcatFiles Include="src\GlobalUsings.cs;src\WinUserManager.cs;src\Interop.cs">
      <Destination>winuser.cs</Destination>
    </ConcatFiles>
    <ConcatFiles Include="src\GlobalUsings.cs;src\Shellcode.cs;src\Interop.cs">
      <Destination>sc.cs</Destination>
    </ConcatFiles>
  </ItemGroup>
  <ItemGroup>
    <None Update="apps\disable_firewall\launch.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="apps\get_tempxvd_owners\launch.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="apps\list_licenses\launch.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="apps\load_pe_shellcode\launch.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="apps\mount_connectedstorage\launch.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="apps\prepare_gamedump\launch.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="apps\registry_dump\launch.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="apps\xbfs_backup\launch.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="modules\xcrdutil\xcrdutil.psd1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="modules\xcrdutil\xcrdutil.psm1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="GenerateConcatenatedFiles" AfterTargets="Build" Inputs="@(ConcatFiles)" Outputs="%(Destination)\ignore.txt">
    <ConcatenateSourceTask OutputDirectory="$(OutputPath)pwsh" InputFiles="@(ConcatFiles)" OutputFile="%(Destination)" />
  </Target>

  <UsingTask TaskName="ConcatenateSourceTask" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <InputFiles ParameterType="System.String[]" Required="true" />
      <OutputFile ParameterType="System.String" Required="false" />
      <OutputDirectory ParameterType="System.String" Required="false" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
var outputPath = Path.Combine(OutputDirectory, OutputFile);
Console.WriteLine($"Writing to {outputPath}");
Directory.CreateDirectory(OutputDirectory);
using (StreamWriter writer = new StreamWriter(outputPath, false, Encoding.UTF8)) {
    foreach(var filePath in InputFiles){
      var contents = File.ReadAllText(filePath, Encoding.UTF8);
            writer.Write(contents);
    }
}
        ]]>
      </Code>
    </Task>
  </UsingTask>
  
</Project>
